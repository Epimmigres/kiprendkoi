@model WebApplication.Models.EventResponseModel
@{
}
<style>
    .main-container {
        padding: 20px;
    }
    .category-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .category-container > input {
        width: auto;
    }
</style>

<div class="main-container">

    <h3>Qui apporte quoi ?</h3>


    <div id="add-container">
        Ajouter une categorie
        <div class="alert alert-primary category-container">
            <input type="text" class="form-control" placeholder="Nom de la categorie" />
            <div>
                <button type="button" class="btn btn-light" onsubmit="console.log(42)">Save</button>
            </div>
        </div>
    </div>

    <div>
        Mes categories
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingOne">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Accordion Item #1
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. <hr> TEST
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Accordion Item #2
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
        </div>




        <div>
            <div class="alert alert-primary category-container">
                Sucre
                <div>
                    <button type="button" class="btn btn-light">Edit</button>
                    <button type="button" class="btn btn-light">Delete</button>
                </div>
            </div>
        </div>

        <div>
            <div class="alert alert-primary category-container">
                Sale
                <div>
                    <button type="button" class="btn btn-light">Edit</button>
                    <button type="button" class="btn btn-light">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>

    <script>

    </script>

